[{"path":[]},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonthegeek@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to apisguru","title":"Contributing to apisguru","text":"outlines propose change apisguru.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to apisguru","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to apisguru","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://jonthegeek.github.io/apisguru/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to apisguru","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jonthegeek/apisguru\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to apisguru","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jonthegeek.github.io/apisguru/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to apisguru","text":"Please note apisguru project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/apisguru/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 apisguru authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jonthegeek.github.io/apisguru/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with apisguru","title":"Getting help with apisguru","text":"Thanks using apisguru! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jonthegeek.github.io/apisguru/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with apisguru","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jonthegeek.github.io/apisguru/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with apisguru","text":"Armed reprex, next step figure ask. ’s question: ’s best ask R4DS Online Learning Community Slack. options include Posit Community, StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jonthegeek.github.io/apisguru/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with apisguru","text":"’ll try look issue soon can, packages maintained volunteers. good reprex particularly important might weeks months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://jonthegeek.github.io/apisguru/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer.","code":""},{"path":"https://jonthegeek.github.io/apisguru/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J (2023). apisguru: APIs.guru 'API' Client. https://jonthegeek.github.io/apisguru/, https://github.com/jonthegeek/apisguru.","code":"@Manual{,   title = {apisguru: APIs.guru 'API' Client},   author = {Jon Harmon},   year = {2023},   note = {https://jonthegeek.github.io/apisguru/, https://github.com/jonthegeek/apisguru}, }"},{"path":"https://jonthegeek.github.io/apisguru/index.html","id":"apisguru","dir":"","previous_headings":"","what":"APIs.guru API Client","title":"APIs.guru API Client","text":"client interact APIs.guru API.","code":""},{"path":"https://jonthegeek.github.io/apisguru/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"APIs.guru API Client","text":"can install development version apisguru GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"jonthegeek/apisguru\")"},{"path":"https://jonthegeek.github.io/apisguru/index.html","id":"made-with-beekeeper","dir":"","previous_headings":"","what":"Made with {beekeeper}","title":"APIs.guru API Client","text":"package developed using {beekeeper} package. Development active, package likely change lot coming weeks. part development {beekeeper}, ’m updating package manually define {beekeeper} create.","code":""},{"path":"https://jonthegeek.github.io/apisguru/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"APIs.guru API Client","text":"Please note apisguru project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/apisguru-package.html","id":null,"dir":"Reference","previous_headings":"","what":"apisguru: APIs.guru 'API' Client — apisguru-package","title":"apisguru: APIs.guru 'API' Client — apisguru-package","text":"client interact 'APIs.guru' 'API'.","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/apisguru/reference/apisguru-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"apisguru: APIs.guru 'API' Client — apisguru-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID)","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/call_guru_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Call the APIs.guru API — call_guru_api","title":"Call the APIs.guru API — call_guru_api","text":"Generate request APIs.guru endpoint.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/call_guru_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call the APIs.guru API — call_guru_api","text":"","code":"call_guru_api(path)"},{"path":"https://jonthegeek.github.io/apisguru/reference/call_guru_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call the APIs.guru API — call_guru_api","text":"path route API endpoint. Optionally, list path plus variables glue::glue() path.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/call_guru_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call the APIs.guru API — call_guru_api","text":"response endpoint.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/dot-shared-parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters used in multiple functions — .shared-parameters","title":"Parameters used in multiple functions — .shared-parameters","text":"Reused parameter definitions gathered easier editing.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/dot-shared-parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters used in multiple functions — .shared-parameters","text":"api string giving version API, \"2.2.0\" \"v2\". provider string describing API provider, \"1password.com\" \"apis.guru\".","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve one version of a particular API — get_api","title":"Retrieve one version of a particular API — get_api","text":"Returns API entry one specific version API serviceName.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve one version of a particular API — get_api","text":"","code":"get_api(provider, api)"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve one version of a particular API — get_api","text":"provider string describing API provider, \"1password.com\" \"apis.guru\". api string giving version API, \"2.2.0\" \"v2\".","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve one version of a particular API — get_api","text":"schema_api_version() tibble.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve one version of a particular API — get_api","text":"","code":"if (FALSE) { # interactive() get_api(\"apis.guru\", \"2.2.0\") }"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get basic metrics — get_metrics","title":"Get basic metrics — get_metrics","text":"basic metrics entire directory. Just stunning numbers put front page intended purely WoW effect :)","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get basic metrics — get_metrics","text":"","code":"get_metrics()"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get basic metrics — get_metrics","text":"schema_metrics() list object.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get basic metrics — get_metrics","text":"","code":"if (FALSE) { # interactive() get_metrics() }"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"List all APIs for a particular provider — get_provider","title":"List all APIs for a particular provider — get_provider","text":"List APIs directory particular providerName. Returns links individual API entry API.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all APIs for a particular provider — get_provider","text":"","code":"get_provider(provider)"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all APIs for a particular provider — get_provider","text":"provider string describing API provider, \"1password.com\" \"apis.guru\".","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all APIs for a particular provider — get_provider","text":"schema_apis() tibble.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all APIs for a particular provider — get_provider","text":"","code":"if (FALSE) { # interactive() head(get_provider()) }"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_providers.html","id":null,"dir":"Reference","previous_headings":"","what":"List all providers — get_providers","title":"List all providers — get_providers","text":"List providers directory","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_providers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all providers — get_providers","text":"","code":"get_providers()"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_providers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all providers — get_providers","text":"character vector provider names.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_providers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all providers — get_providers","text":"","code":"if (FALSE) { # interactive() head(get_providers()) }"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_service_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve one version of a particular API with a serviceName. — get_service_api","title":"Retrieve one version of a particular API with a serviceName. — get_service_api","text":"Returns API entry one specific version API serviceName.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_service_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve one version of a particular API with a serviceName. — get_service_api","text":"","code":"get_service_api(provider, service, api)"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_service_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve one version of a particular API with a serviceName. — get_service_api","text":"provider string describing API provider, \"1password.com\" \"apis.guru\". service string describing service name API. example, \"1password.com:events\", \"events\" service \"1password.com\" provider. api string giving version API, \"2.2.0\" \"v2\".","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_service_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve one version of a particular API with a serviceName. — get_service_api","text":"list -schemas describe .","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_service_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve one version of a particular API with a serviceName. — get_service_api","text":"","code":"if (FALSE) { # interactive() test_result <- get_service_api(\"1password.com\", \"events\", \"1.0.0\") }"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_services.html","id":null,"dir":"Reference","previous_headings":"","what":"List all serviceNames for a particular provider — get_services","title":"List all serviceNames for a particular provider — get_services","text":"List serviceNames directory particular providerName","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_services.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all serviceNames for a particular provider — get_services","text":"","code":"get_services(provider)"},{"path":"https://jonthegeek.github.io/apisguru/reference/get_services.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all serviceNames for a particular provider — get_services","text":"provider string describing API provider, \"1password.com\" \"apis.guru\".","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_services.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all serviceNames for a particular provider — get_services","text":"character vector service names.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/get_services.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all serviceNames for a particular provider — get_services","text":"","code":"if (FALSE) { # interactive() get_services(\"1password.com\") get_services(\"adyen.com\") }"},{"path":"https://jonthegeek.github.io/apisguru/reference/list_apis.html","id":null,"dir":"Reference","previous_headings":"","what":"List all APIs — list_apis","title":"List all APIs — list_apis","text":"List APIs directory. Returns links OpenAPI definitions API directory. API exist multiple versions preferred one explicitly marked. basic info OpenAPI definition cached inside object. allows generate simple views without needing fetch OpenAPI definition API.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/list_apis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all APIs — list_apis","text":"","code":"list_apis()"},{"path":"https://jonthegeek.github.io/apisguru/reference/list_apis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all APIs — list_apis","text":"schema_apis() tibble.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/list_apis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all APIs — list_apis","text":"","code":"if (FALSE) { # interactive() list_apis() }"},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta information about API — schema_api","title":"Meta information about API — schema_api","text":"Apply API schema details single API.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta information about API — schema_api","text":"","code":"schema_api(x)"},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meta information about API — schema_api","text":"x list elements added, preferred, versions.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meta information about API — schema_api","text":"one-row tibble describing API.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta information about API — schema_api","text":"","code":"x <- list(   added = \"2016-01-01T12:34:56Z\",   preferred = \"v2\",   versions = list(     v1 = list(       added = \"2016-01-01T12:34:56Z\",       info = list(),       updated = \"2016-01-01T12:34:56Z\",       swaggerUrl = \"https://example.com/v1/swagger.json\",       swaggerYamlUrl = \"https://example.com/v1/swagger.yml\",       openapiVer = \"3.0.0\"     ),     v2 = list(       added = \"2023-01-01T12:34:56Z\",       info = list(),       updated = \"2023-01-01T12:34:56Z\",       swaggerUrl = \"https://example.com/v2/swagger.json\",       swaggerYamlUrl = \"https://example.com/v2/swagger.yml\",       openapiVer = \"3.1.0\"     )   ) ) schema_api(x) #> # A tibble: 1 × 3 #>   added               preferred           versions #>   <dttm>              <chr>     <list<tibble[,9]>> #> 1 2016-01-01 12:34:56 v2                   [2 × 9]"},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_api_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of one version of an API — schema_api_version","title":"Description of one version of an API — schema_api_version","text":"Apply ApiVersions schema API object.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_api_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Description of one version of an API — schema_api_version","text":"","code":"schema_api_version(x)"},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_api_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Description of one version of an API — schema_api_version","text":"x object describing one version API.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_api_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Description of one version of an API — schema_api_version","text":"one-row tibble describing API.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_apis.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta information about APIs — schema_apis","title":"Meta information about APIs — schema_apis","text":"Apply APIs schema list API details.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_apis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta information about APIs — schema_apis","text":"","code":"schema_apis(x = list())"},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_apis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meta information about APIs — schema_apis","text":"x named list API details. element elements added, preferred, versions.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_apis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meta information about APIs — schema_apis","text":"tibble one row per API.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_apis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta information about APIs — schema_apis","text":"","code":"schema_apis() #> # A tibble: 0 × 4 #> # ℹ 4 variables: name <chr>, added <dttm>, preferred <chr>, #> #   versions <list<tibble[,9]>> x <- list(   \"api1\" = list(     added = \"2016-01-01T12:34:56Z\",     preferred = \"v2\",     versions = list(       v1 = list(         added = \"2016-01-01T12:34:56Z\",         info = list(),         updated = \"2016-01-01T12:34:56Z\",         swaggerUrl = \"https://example.com/v1/swagger.json\",         swaggerYamlUrl = \"https://example.com/v1/swagger.yml\",         openapiVer = \"3.0.0\"       ),       v2 = list(         added = \"2023-01-01T12:34:56Z\",         info = list(),         updated = \"2023-01-01T12:34:56Z\",         swaggerUrl = \"https://example.com/v2/swagger.json\",         swaggerYamlUrl = \"https://example.com/v2/swagger.yml\",         openapiVer = \"3.1.0\"       )     )   ),   \"api2\" = list(     added = \"2018-01-01T12:34:56Z\",     preferred = \"v1\",     versions = list(       v1 = list(         added = \"2018-01-01T12:34:56Z\",         info = list(),         updated = \"2018-01-01T12:34:56Z\",         swaggerUrl = \"https://url.com/v1/swagger.json\",         swaggerYamlUrl = \"https://url.com/v1/swagger.yml\",         openapiVer = \"3.0.0\"       )     )   ) ) schema_apis(x) #> # A tibble: 2 × 4 #>   name  added               preferred           versions #>   <chr> <dttm>              <chr>     <list<tibble[,9]>> #> 1 api1  2016-01-01 12:34:56 v2                   [2 × 9] #> 2 api2  2018-01-01 12:34:56 v1                   [1 × 9]"},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"List of basic metrics — schema_metrics","title":"List of basic metrics — schema_metrics","text":"Apply Metrics schema metrics object.","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of basic metrics — schema_metrics","text":"","code":"schema_metrics(x)"},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of basic metrics — schema_metrics","text":"x list metrics, elements numSpecs, numAPIs, numEndpoints (likely several elements).","code":""},{"path":"https://jonthegeek.github.io/apisguru/reference/schema_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of basic metrics — schema_metrics","text":"validated list metrics.","code":""}]
